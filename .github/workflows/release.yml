# .github/workflows/release.yml

name: Release and Publish

permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:
  push:
    branches:
     - master
  release:
    types:
      - published
  schedule:
    - cron: '46 18 * * 2'

env:
  FORCE_COLOR: 3

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Important for setuptools_scm to get correct version from git tags

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install build, upload, and executable packaging tools
      run: python -m pip install --upgrade setuptools build twine pyinstaller

    - name: Build sdist and wheel distributions
      run: python -m build --sdist --wheel .

    - name: Check Python distribution validity
      run: twine check dist/*

    - name: Build PyInstaller Executable
      run: |
        pyinstaller main.spec
        ls -al dist/generatemc

    - uses: actions/upload-artifact@v4
      with:
        name: single
        path: dist/generatemc

    - uses: actions/upload-artifact@v4
      with:
        name: wheel
        path: dist/*.whl

    - uses: actions/upload-artifact@v4
      with:
        name: source
        path: dist/*.tar.gz
    

  publish:
    name: Upload if release
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: pypi
    permissions:
      id-token: write
      attestations: write
      contents: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: wheel
        path: dist

    - uses: actions/download-artifact@v4
      with:
        name: source
        path: dist

    - name: Generate artifact attestation for sdist and wheels
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: "dist/*whl"

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        attestations: true

  upload-release-assets:
    name: Upload if release
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write
      attestations: write
      contents: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: single
        path: dist

    - name: Upload release assets to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*